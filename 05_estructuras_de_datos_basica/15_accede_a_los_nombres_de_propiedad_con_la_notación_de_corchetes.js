
{
    // En el primer desaf칤o de objetos mencionamos el uso de notaci칩n de corchetes como una manera de acceder a los valores de una propiedad mediante la evaluaci칩n de una variable. Por ejemplo, imagina que nuestro objeto foods est치 siendo usado en un programa para una caja registradora de supermercado. Tenemos una funci칩n que establece selectedFood y queremos revisar en nuestro objeto foods si ese alimento est치 presente. Esto podr칤a verse as칤:

    /*游녤 let selectedFood = getCurrentFood(scannedItem);游녣*/
    /*游녤let inventory = foods[selectedFood];游녣*/
}

{
    // === Desafio ===

    // Hemos definido una funci칩n, checkInventory, que recibe como argumento un elemento escaneado. Devuelve el valor actual de la clave scannedItem en el objeto foods. Puedes asumir que s칩lo se proporcionar치n claves v치lidas como argumento a checkInventory.



    let foods = {
        apples: 25,
        oranges: 32,
        plums: 28,
        bananas: 13,
        grapes: 35,
        strawberries: 27
    };

    function checkInventory(scannedItem) {
        // Cambia solo el c칩digo debajo de esta l칤nea

        // Cambia solo el c칩digo encima de esta l칤nea
    }

    console.log(checkInventory("apples"));
}
{
    // === Solucion ===

    // Hemos definido una funci칩n, checkInventory, que recibe como argumento un elemento escaneado. Devuelve el valor actual de la clave scannedItem en el objeto foods. Puedes asumir que s칩lo se proporcionar치n claves v치lidas como argumento a checkInventory.



    let foods = {
        apples: 25,
        oranges: 32,
        plums: 28,
        bananas: 13,
        grapes: 35,
        strawberries: 27
    };

    function checkInventory(scannedItem) {
        // Cambia solo el c칩digo debajo de esta l칤nea
        return foods[scannedItem];

        // Cambia solo el c칩digo encima de esta l칤nea
    }

    console.log(checkInventory("bananas"));
}