{

    // ===Explicacion===

    //*Refactoriza variables globales por fuera de funciones

    // Hasta ahora, hemos visto dos principios distintos para la programaci칩n funcional:

    // No alteres una variable u objeto: crea nuevas variables y objetos y devu칠lvelos, si es necesario, desde una funci칩n. Pista: usar algo como const newArr = arrVar, donde arrVar es un arreglo, simplemente crear치 una referencia a la variable existente y no una copia. As칤 que cambiar un valor en newArr cambiar칤a el valor en arrVar.

    // Declara par치metros de funci칩n: cualquier c치lculo dentro de una funci칩n depende s칩lo de los argumentos pasados a la funci칩n y no en ning칰n objeto o variable global.

    // A침adir uno a un n칰mero no es muy emocionante, pero podemos aplicar estos principios cuando trabajamos con arreglos u objetos m치s complejos.
}

{
    //* ===Desafio===


    //*  Reescribe el c칩digo para que el arreglo global bookList no sea cambiado dentro de ninguna de las funciones:
    // *  1) La funci칩n add debe agregar el bookName dado al final del arreglo pasado a esta y devolver un nuevo arreglo (lista).
    // *  2) La funci칩n remove debe eliminar el bookName dado del arreglo pasado a esta.

    //! Nota: ambas funciones deben devolver un arreglo y cualquier nuevo par치metro debe ser a침adido antes del par치metro bookName.

    // La variable global
    const bookList = ["The Hound of the Baskervilles", "On The Electrodynamics of Moving Bodies", "Philosophi칝 Naturalis Principia Mathematica", "Disquisitiones Arithmeticae"];

    // Cambia el c칩digo debajo de esta l칤nea
    function add(bookList, bookName) {
        let bookListCopy = bookList.slice();
        bookListCopy.push(bookName);
        // console.log(bookListCopy);
        return bookListCopy;
        // Cambia el c칩digo encima de esta l칤nea
    }

    // Cambia el c칩digo debajo de esta l칤nea
    function remove(bookList, bookName) {
        let bookListCopy = [...bookList];
        // console.log(bookListCopy);
        const book_index = bookListCopy.indexOf(bookName);
        // console.log(book_index);
        if (book_index >= 0) {
            bookListCopy.splice(book_index, 1);
            return bookListCopy;
            // Cambia el c칩digo encima de esta l칤nea
        }
    }

    /*游녤
        const newBookList = add(bookList, 'A Brief History of Time')
        console.log(newBookList);
    
        const newerBookList = remove(bookList, 'On The Electrodynamics of Moving Bodies');
        console.log(newerBookList);游녣*/

    const newestBookList = remove(add(bookList, 'A Brief History of Time'), 'On The Electrodynamics of Moving Bodies'); //remove('A Brief History of Time','On The Electrodynamics of Moving)
    // console.log(newestBookList);
}

{
    //! ===Solucion===


    //* Reescribe el c칩digo para que el arreglo global bookList no sea cambiado dentro de ninguna de las funciones. La funci칩n add debe agregar el bookName dado al final del arreglo pasado a esta y devolver un nuevo arreglo (lista). La funci칩n remove debe eliminar el bookName dado del arreglo pasado a esta.

    //* Nota: ambas funciones deben devolver un arreglo y cualquier nuevo par치metro debe ser a침adido antes del par치metro bookName.


    //! La variable global  
    // La variable global
    const bookList = ["The Hound of the Baskervilles", "On The Electrodynamics of Moving Bodies", "Philosophi칝 Naturalis Principia Mathematica", "Disquisitiones Arithmeticae"];

    // Cambia el c칩digo debajo de esta l칤nea
    function add(bookList, bookName) {
        let newbookList = bookList.slice();
        newbookList.push(bookName);
        return newbookList;

        // Cambia el c칩digo encima de esta l칤nea
    }


    // Cambia el c칩digo debajo de esta l칤nea
    function remove(bookList, bookName) {
        let newbookList = bookList.slice();
        let book_index = newbookList.indexOf(bookName);
        console.log(book_index);
        if (book_index >= 0) {
            console.log(newbookList[book_index]);
            console.log("  Parametos de el newbookList.splice(book_index, book_index)  ==> " + book_index, book_index);
            newbookList.splice(book_index, book_index);
            console.log(" ");
            return newbookList;

            // Cambia el c칩digo encima de esta l칤nea
        }
    }

    //console.log(add(bookList, "A Brief History of Time"))
    //console.log(remove(bookList, "Disquisitiones Arithmeticae"))
    console.log(remove(add(bookList, "A Brief History of Time"), "On The Electrodynamics of Moving Bodies"));
}