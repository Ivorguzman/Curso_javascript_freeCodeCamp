
{
    // === Explicacion ===

    // 1.  En lecciones anteriores, aprendiste que un objeto puede heredar su comportamiento (m√©todos) de otro objeto al referenciar su prototype:
    /*üëâObjetoHijo.prototype = Object.create(ObjetoPadre.prototype);üëà*/
    // 2. Luego, el ObjetoHijo recibi√≥ sus propios m√©todos (nombreDelMetodo) al encadenarlos a su prototype:
    /*üëâObjetoHijo.prototype.nombreDelMetodo = function () { return "???"; };üëà*/

    // Es posible sobreescribir un m√©todo heredado. Se hace de la misma manera: agregando un m√©todo a ObjetoHijo.prototype usando el mismo nombre de m√©todo que el que se va a sobrescribir. Aqu√≠ hay un ejemplo de Bird sobrescribiendo el m√©todo eat() heredado de Animal:

    function Animal() { }
    Animal.prototype.eat = function () {
        return "nom nom nom";
    };
    function Bird() { }

    Bird.prototype = Object.create(Animal.prototype);

    Bird.prototype.eat = function () {
        return "peck peck peck";
    };

    // 1. duck => ¬øEst√° eat() definido aqu√≠? No.(fue heredado)
    // 2. Bird => ¬øEst√° eat() definido aqu√≠? => S√≠. 
    // 3. Animal => ¬øEst√° eat() definido aqu√≠? => S√≠. 

}


{


    // === Desafio ===

    // Sobrescribe el m√©todo fly() para Penguin de manera que devuelva la cadena de texto Alas, this is a flightless bird.


    function Bird() { }

    Bird.prototype.fly = function() { return "I am flying!"; };
    
    function Penguin() { }
    Penguin.prototype = Object.create(Bird.prototype);
    Penguin.prototype.constructor = Penguin;
    
    // Cambia solo el c√≥digo debajo de esta l√≠nea
    
    
    
    // Cambia solo el c√≥digo encima de esta l√≠nea
    
    let penguin = new Penguin();
    console.log(penguin.fly());
}
{


    // === Solucion ===

    // Sobrescribe el m√©todo fly() para Penguin de manera que devuelva la cadena de texto Alas, this is a flightless bird.


    function Bird() { }

    Bird.prototype.fly = function () { return "I am flying!"; };

    function Penguin() { }
    Penguin.prototype = Object.create(Bird.prototype);

    // Cambia solo el c√≥digo debajo de esta l√≠nea

    Penguin.prototype.fly = function () { return "Alas, this is a flightless bird."; };

    // Cambia solo el c√≥digo encima de esta l√≠nea

    let penguin = new Penguin();

    console.log(penguin.constructor)
    Penguin.prototype.constructor = Penguin;
    console.log(penguin.constructor)

    console.log(penguin.fly());
}